{"mappings":"AACA,SAAAA,kBAAAC,EAAAC,I,m8BAAA,IAAMC,MAAQC,SAASC,cAAc,aAC/BC,UAAYF,SAASC,cAAc,iBAuDK,SAArCE,UAE2C,IAA5CC,EAAU,EAEbC,mBAAGH,UAAUI,UAAUC,SAAQ,SAACC,G,OAAQA,EAAIC,YAAc,E,IAGoB,IAAzEC,EAAWL,mBAAIH,UAAUI,UAAUK,KAAI,SAACC,EAAGC,G,OAAKC,cAAcD,E,IACpEE,QAAQC,WAAWN,GAAUO,MAAK,SAACC,GAC/BA,EACCX,SAAQ,SAACY,EAAMN,GAEZO,YAAW,WACa,cAAhBD,EAAKE,SACLjB,GAAW,GAEnBF,UAAUI,SAASO,GAAGJ,YAAcU,EAAKG,OAASH,EAAKI,OAEpDrB,UAAUI,SAASkB,OAAS,IAAMX,GACrCO,YAAW,WACHhB,IAAYF,UAAUI,SAASkB,QAAWpB,EAG1CqB,MAAM,iBAFNA,MAAM,U,GAIX,I,GAIA,IAAJZ,E,OAMPa,QAAQC,IAAIjB,E,CAIhB,SAASI,cAAcc,GACvB,OAAO,IAAIb,SAAS,SAACc,EAAKC,GACXC,KAAKC,SAEJ,GACRH,EAAI,MAEDC,EAAC,K,IAnGZ/B,MAAMkC,iBAAiB,QAAS9B","sources":["src/js/13-game.js"],"sourcesContent":["\nconst start = document.querySelector('.js-start');\nconst container = document.querySelector('.js-container');\n\nstart.addEventListener('click', onStart);\n\n// function onStart(){\n//     // створюємо масив, щоб перевірити на виграшний результата\n//     const result = [];\n//     // очищуємо кожен бокс після кожної гри \n//     [...container.children].forEach((box) => box.textContent = '');\n//     // розпилюэмо псевдомасив children, перебираємо його ForEach. на кожній ітерації отримаємо box\n//     [...container.children].forEach((box, i)=> {\n//         createPromise(i)\n//         .then((smile)=> {\n//             box.textContent = smile;\n//             result.push('1');\n//         })\n//         .catch((smile) => (box.textContent = smile))\n//         .finally(() => {\n// setTimeout(() => {\n//     if (i === container.children.length - 1) {\n//         if(!result.length || result.length === 3) {\n//             alert('Winner!')\n//         }else{\n//             alert('Lost money!')\n//         }\n//     }\n// }, 1000)\n//         })\n//     })\n//     // в цьому випадку з'являються всі зразу\n    \n//     // console.dir(container);\n// }\n// // а ми хочемо, щоб по черзі через секунду і різні\n// // створюємо цю функцію, щоб описати тут всі її властивості!!!\n\n// function createPromise(delay) {\n// return new Promise ((res, rej) =>{\n// const random = Math.random();\n// // const first = Math.floor(Math.random()*10);\n// // const arr = ['✅','❌','😀' ]\n// setTimeout(() => {\n//     if(random > 0.7) {\n//         res('😊')\n//     }else {\n//         rej('🤑')\n//     }\n// }, 1000 * delay)\n\n\n// });\n// }\n\n// 2 ВАРІАНТ будемо робити те саме через колекцію промісів\n\nfunction onStart(){\n    // створюємо масив, щоб перевірити на виграшний результата\n    let counter = 0;\n\n    [...container.children].forEach((box) => box.textContent = '');\n\n    // неактивний елемент box можна замінити на _ -нижнє підкреслення- щоб він не заважав дивитися консоль\n    const promises = [...container.children].map((_, i)=> createPromise(i));\n    Promise.allSettled(promises).then((items) => {\n        items\n        .forEach((item, i) => {\n            // console.log(item);\n            setTimeout(() => {\n                if (item.status === 'fulfilled') {\n                    counter += 1;\n                }\n            container.children[i].textContent = item.value || item.reason;\n\n           if (container.children.length - 1 === i) {\n            setTimeout(() => {\n                if (counter === container.children.length || !counter) {\n                    alert('WINNER!')\n                } else {\n                    alert('LOST MONEY!!!')\n                }\n            }, 500);\n         \n           }\n       \n        }, i * 1000);\n        });\n   \n    })\n    \n    \n    console.log(promises);\n}\n\n\nfunction createPromise(delay) {\nreturn new Promise ((res, rej) =>{\nconst random = Math.random();\n\n    if(random > 0.5) {\n        res('😊');\n    }else {\n        rej('🤑');\n    }\n\n});\n}"],"names":["_arrayLikeToArray","arr","len","start","document","querySelector","container","onStart","counter","_toConsumableArray","children","forEach","box","textContent","promises","map","_","i","createPromise","Promise","allSettled","then","items","item","setTimeout","status","value","reason","length","alert","console","log","delay","res","rej","Math","random","addEventListener"],"version":3,"file":"13-game.4323c798.js.map"}