const t={startBtn:document.querySelector("button[data-action-start]"),stopBtn:document.querySelector("button[data-action-stop]"),clockface:document.querySelector(".js-clockface")};const e=new class{constructor({onTick:t}){this.intervalId=null,this.isActive=!1,this.onTick=t,this.init()}init(){const t=this.getTimeComponents(0);this.onTick(t)}start(){if(this.isActive)return;const t=Date.now();this.isActive=!0,this.intervalId=setInterval((()=>{const e=Date.now()-t,o=this.getTimeComponents(e);this.onTick(o)}),1e3)}stop(){clearInterval(this.intervalId),this.isActive=!1;const t=this.getTimeComponents(0);this.onTick(t)}getTimeComponents(t){return{hours:this.pad(Math.floor(t%864e5/36e5)),mins:this.pad(Math.floor(t%36e5/6e4)),secs:this.pad(Math.floor(t%6e4/1e3))}}pad(t){return String(t).padStart(2,"0")}}({onTick:function({hours:e,mins:o,secs:n}){t.clockface.textContent=`${e}:${o}:${n}`}});t.startBtn.addEventListener("click",e.start.bind(e)),t.stopBtn.addEventListener("click",e.stop.bind(e));const o=new Date,n=new Date("12/31/2023");console.log(o),console.log(n),console.log(n-o),setInterval((()=>{const t=new Date,e=new Date("12/31/2023");console.log(function(t){const e=1e3,o=60*e,n=60*o,s=24*n,i=Math.floor(t/s),c=Math.floor(t%s/n),a=Math.floor(t%s%n/o),r=Math.floor(t%s%n%o/e);return{days:i,hours:c,minutes:a,seconds:r}}(e-t))}),1e3);
//# sourceMappingURL=06-timer.c617e255.js.map
