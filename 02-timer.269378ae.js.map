{"mappings":"YAEA,IAAMA,EAAO,CACTC,SAAUC,SAASC,cAAc,sBACjCC,WAAYF,SAASC,cAAc,oBACnCE,UAAWH,SAASC,cAAc,mBAClCG,WAAYJ,SAASC,cAAc,oBACnCI,UAAWL,SAASC,cAAc,sBAClCK,UAAWN,SAASC,cAAc,uBAKhCM,GAFYC,aAEJ,CACVC,WAAY,KACZC,UAAU,EACVC,MAAA,WACOD,WAIHE,KAAKF,UAAW,EAExBE,KAAKH,WAAaI,aAAY,WAC1B,IAAMC,EAAcC,KAAKC,MACRC,UAOjBC,QAAQC,IAAI,GAAWC,OAARC,KAAK,KAAYD,OAATE,MAAM,KAAWF,OAARG,KAAK,KAAQH,OAALI,M,GACzC,K,EAEHC,KAAA,WACIC,cAAcd,KAAKH,W,IAKvBX,EAAKC,SAAS4B,iBAAiB,SAAS,WACpCpB,EAAMI,O,IAIVb,EAAK8B,QAAQD,iBAAiB,SAAS,WACnCpB,EAAMkB,M,IAyBVZ,aAAY,WACR,IAAMgB,EAAc,IAAId,KAClBe,EAAa,IAAIf,KAAK,cAC5BG,QAAQC,IAGZ,SAAmBY,GAEf,IAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGNb,EAAOe,KAAKC,MAAMN,EAAKI,GAEvBb,EAAQc,KAAKC,MAAMN,EAAMI,EAAOD,GAEhCI,EAAUF,KAAKC,MAAMN,EAAOI,EAAOD,EAAQD,GAE3CM,EAAUH,KAAKC,MAAMN,EAAQI,EAAOD,EAAQD,EAAUD,GAE5D,MAAO,CAAEX,OAAMC,QAAOgB,UAASC,U,CAnBnBC,CAAUV,EAAaD,G,GACpC,I","sources":["src/js/02-timer.js"],"sourcesContent":["\n\nconst refs = {\n    startBtn: document.querySelector('button[data-start]'),\n    datePicker: document.querySelector('#datetime-picker'),\n    daysValue: document.querySelector('span[data-days]'),\n    hoursValue: document.querySelector('span[data-hours]'),\n    minsValue: document.querySelector('span[data-minutes]'),\n    secsValue: document.querySelector('span[data-seconds]'),\n}\n\nconst finalTime = chooseDate();\n\nconst timer = {\n    intervalId: null,\n    isActive: false,\n    start() {\n        if(isActive) {\n            return;\n        }\n\n        this.isActive = true;\n\nthis.intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    const dateTime = startTime- currentTime;\n    // const { days, hours, mins, secs } = getTimeComponents(deltaTime);\n    // деструктуризацію змінюємо на змінну time\n    // const time = getTimeComponents(deltaTime);\n    // і викликаємо функцію updateClockFace\n    // updateClockFace(time);\n    \n    console.log(`${days}:${hours}:${mins}:${secs}`);\n}, 1000);\n    },\nstop() {\n    clearInterval(this.intervalId);\n},\n\n};\n\nrefs.startBtn.addEventListener('click', () => {\n    timer.start();\n})\n\n\nrefs.stopBtn.addEventListener('click', () => {\n    timer.stop();\n})\n\n\n\nfunction updateClockFace ({days, hours, mins, secs}) {\n    requestAnimationFrame.clockface.textContent = `${days}:${hours}:${mins}:${secs}`;\n}\n\n//  для того, щоб зробити числа завжди двозначними (01 або 25) використовуємо метод pad\n// ми в нього обернемо наші значення hours, mins, secs\nfunction pad(value) {\n    // цей запис означає : візьми число, зроби з нього строку і на старті(ЗЛІВА!!) додай '0'\n    return String(value).padStart(2, '0');\n}\n\nfunction getTimeComponents(time) {\n    const days = pad(Math.floor(time % (1000 * 60 * 60 * 24)));\n    const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = pad( Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n            return { days, hours, mins, secs};\n}\n\nsetInterval(() =>{\n    const currentDate = new Date();\n    const targetDate = new Date('12/31/2023');\n    console.log(convertMs(targetDate - currentDate)) \n}, 1000)\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n  "],"names":["$84b9dae4df53835d$var$refs","startBtn","document","querySelector","datePicker","daysValue","hoursValue","minsValue","secsValue","$84b9dae4df53835d$var$timer","chooseDate","intervalId","isActive","start","this","setInterval","currentTime","Date","now","startTime","console","log","concat","days","hours","mins","secs","stop","clearInterval","addEventListener","stopBtn","currentDate","targetDate","ms","second","minute","hour","day","Math","floor","minutes","seconds","$84b9dae4df53835d$var$convertMs"],"version":3,"file":"02-timer.269378ae.js.map"}